"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncThrottleQueue = void 0;
const MESSAGE_PER_SECSON = 20;
class AsyncThrottleQueue {
    constructor(interval = MESSAGE_PER_SECSON) {
        this.interval = interval;
        this.queue = [];
        this.isProcessing = false;
    }
    enqueue(task) {
        return new Promise((resolve, reject) => {
            this.queue.push(async () => {
                try {
                    const result = await task();
                    resolve(result);
                }
                catch (err) {
                    reject(err);
                }
            });
            if (!this.isProcessing) {
                this.processQueue();
            }
        });
    }
    async processQueue() {
        this.isProcessing = true;
        while (this.queue.length > 0) {
            const task = this.queue.shift();
            if (task) {
                await task();
                await new Promise((r) => setTimeout(r, this.interval));
            }
        }
        this.isProcessing = false;
    }
}
exports.AsyncThrottleQueue = AsyncThrottleQueue;
//# sourceMappingURL=AsyncThrottleQueue.js.map