import { ApiChannelDescription, ApiMessageAttachment, ApiMessageMention, ChannelMessageContent } from "../../interfaces";
import { MessageDatabase } from "../../sqlite/MessageDatabase";
import { SocketManager } from "../manager/socket_manager";
import { AsyncThrottleQueue } from "../utils/AsyncThrottleQueue";
import { CacheManager } from "../utils/CacheManager";
import { Clan } from "./Clan";
import { Message } from "./Message";
export declare class TextChannel {
    id: string | undefined;
    name: string | undefined;
    is_private: boolean;
    channel_type: number | undefined;
    category_id: string | undefined;
    category_name: string | undefined;
    parent_id: string | undefined;
    clan: Clan;
    messages: CacheManager<string, Message>;
    private readonly socketManager;
    private readonly messageQueue;
    private messageDB;
    constructor(initChannelData: ApiChannelDescription, clan: Clan, socketManager: SocketManager, messageQueue: AsyncThrottleQueue, messageDB: MessageDatabase);
    send(content: ChannelMessageContent, mentions?: Array<ApiMessageMention>, attachments?: Array<ApiMessageAttachment>, mention_everyone?: boolean, anonymous_message?: boolean, topic_id?: string, code?: number): Promise<import("../../interfaces").ChannelMessageAck>;
    sendEphemeral(receiver_id: string, content: any, reference_message_id?: string, mentions?: Array<ApiMessageMention>, attachments?: Array<ApiMessageAttachment>, mention_everyone?: boolean, anonymous_message?: boolean, topic_id?: string, code?: number): Promise<import("../../interfaces").ChannelMessageAck>;
}
