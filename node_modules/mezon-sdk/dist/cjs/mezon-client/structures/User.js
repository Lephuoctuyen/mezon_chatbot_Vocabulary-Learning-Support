"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const constants_1 = require("../../constants");
class User {
    constructor(initUserData, clan, messageQueue, socketManager, channelManager) {
        var _a, _b, _c, _d, _e, _f;
        this.id = initUserData.id;
        this.avartar = (_a = initUserData.avartar) !== null && _a !== void 0 ? _a : "";
        this.dmChannelId = (_b = initUserData === null || initUserData === void 0 ? void 0 : initUserData.dmChannelId) !== null && _b !== void 0 ? _b : "";
        this.username = (_c = initUserData === null || initUserData === void 0 ? void 0 : initUserData.username) !== null && _c !== void 0 ? _c : "";
        this.clan_nick = (_d = initUserData === null || initUserData === void 0 ? void 0 : initUserData.clan_nick) !== null && _d !== void 0 ? _d : "";
        this.clan_avatar = (_e = initUserData === null || initUserData === void 0 ? void 0 : initUserData.clan_avatar) !== null && _e !== void 0 ? _e : "";
        this.display_name = (_f = initUserData === null || initUserData === void 0 ? void 0 : initUserData.display_name) !== null && _f !== void 0 ? _f : "";
        this.clan = clan;
        this.channelManager = channelManager;
        this.messageQueue = messageQueue;
        this.socketManager = socketManager;
    }
    async sendToken(sendTokenData) {
        var _a, _b;
        const dataSendToken = {
            receiver_id: this.id,
            amount: sendTokenData.amount,
            note: (_a = sendTokenData === null || sendTokenData === void 0 ? void 0 : sendTokenData.note) !== null && _a !== void 0 ? _a : "",
            extra_attribute: (_b = sendTokenData === null || sendTokenData === void 0 ? void 0 : sendTokenData.extra_attribute) !== null && _b !== void 0 ? _b : "",
        };
        try {
            return this.clan.apiClient.sendToken(this.clan.sessionToken, dataSendToken);
        }
        catch (error) {
            console.log("Error sendToken");
        }
    }
    async sendDM(content, code) {
        return this.messageQueue.enqueue(async () => {
            var _a;
            if (!this.dmChannelId) {
                const dmChannel = await this.createDmChannel();
                this.dmChannelId = (_a = dmChannel === null || dmChannel === void 0 ? void 0 : dmChannel.channel_id) !== null && _a !== void 0 ? _a : "";
            }
            if (!this.dmChannelId)
                throw Error(`Can not get dmChannelId for this user ${this.id}!`);
            const dataSendDm = {
                clan_id: "0",
                channel_id: this.dmChannelId,
                mode: constants_1.ChannelStreamMode.STREAM_MODE_DM,
                is_public: false,
                content,
                code,
            };
            return await this.socketManager.writeChatMessage(dataSendDm);
        });
    }
    async createDmChannel() {
        var _a;
        try {
            const dmChannel = await ((_a = this.channelManager) === null || _a === void 0 ? void 0 : _a.createDMchannel(this.id));
            return dmChannel !== null && dmChannel !== void 0 ? dmChannel : {};
        }
        catch (error) {
            console.log("Error createDmChannel User");
            return null;
        }
    }
    async listTransactionDetail(transactionId) {
        const session = this.clan.sessionToken;
        return this.clan.apiClient.listTransactionDetail(session, transactionId);
    }
}
exports.User = User;
//# sourceMappingURL=User.js.map