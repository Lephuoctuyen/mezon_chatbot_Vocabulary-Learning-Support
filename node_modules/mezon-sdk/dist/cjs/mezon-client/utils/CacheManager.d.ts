import Collection from "./Collection";
export declare class CacheManager<K, V> {
    private fetcher;
    private maxSize;
    cache: Collection<K, V>;
    constructor(fetcher: (id: K) => Promise<V>, maxSize?: number);
    get size(): number;
    get(id: K): V | undefined;
    set(id: K, value: V): void;
    fetch(id: K): Promise<V>;
    first(): V | undefined;
    filter(fn: (value: V) => boolean): Collection<K, V>;
    map<T>(fn: (value: V) => T): T[];
    values(): IterableIterator<V>;
    delete(id: K): boolean;
}
