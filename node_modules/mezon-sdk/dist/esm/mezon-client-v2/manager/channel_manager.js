import { ChannelType } from "../../constants";
import { isValidUserId } from "../../utils/helper";
export class ChannelManager {
    apiClient;
    socketManager;
    sessionManager;
    allDmChannels;
    constructor(apiClient, socketManager, sessionManager) {
        this.apiClient = apiClient;
        this.socketManager = socketManager;
        this.sessionManager = sessionManager;
    }
    async initAllDmChannels(sessionToken) {
        if (!sessionToken)
            return;
        const channels = await this.apiClient.listChannelDescs(sessionToken, ChannelType.CHANNEL_TYPE_DM);
        this.allDmChannels = channels?.channeldesc
            .map((channel) => {
            if (!channel?.user_id?.length)
                return;
            return {
                [channel.user_id[0]]: channel.channel_id,
            };
        })
            .filter(Boolean)
            .reduce((acc, curr) => Object.assign(acc, curr), {});
    }
    getAllDmChannels() {
        return this.allDmChannels;
    }
    /** Create DM channel with user */
    async createDMchannel(userId) {
        try {
            if (!isValidUserId(userId))
                return null;
            const socket = this.socketManager.getSocket();
            const request = {
                clan_id: "",
                channel_id: "0",
                category_id: "0",
                type: ChannelType.CHANNEL_TYPE_DM,
                user_ids: [userId],
                channel_private: 1,
            };
            const channelDM = await this.apiClient.createChannelDesc(this.sessionManager.getSession().token, request);
            if (channelDM) {
                await this.sleep(100);
                await socket.joinChat(channelDM.clan_id, channelDM.channel_id, channelDM.type, false);
                return channelDM;
            }
            return null;
        }
        catch (e) {
            console.log(e);
            return null;
        }
    }
    sleep(ms) {
        return new Promise((resolve) => setTimeout(resolve, ms));
    }
}
//# sourceMappingURL=channel_manager.js.map