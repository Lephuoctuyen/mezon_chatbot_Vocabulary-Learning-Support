import { ChannelStreamMode } from "../../constants";
import { convertChanneltypeToChannelMode } from "../../utils/helper";
import { CacheManager } from "../utils/CacheManager";
export class TextChannel {
    id;
    name;
    is_private;
    channel_type;
    category_id;
    category_name;
    parent_id;
    clan;
    messages;
    socketManager;
    messageQueue;
    constructor(initChannelData, clan, socketManager, messageQueue) {
        this.id = initChannelData.channel_id;
        this.name = initChannelData.channel_label;
        this.channel_type = initChannelData?.type;
        this.is_private = !!initChannelData?.channel_private;
        this.category_id = initChannelData?.category_id ?? "";
        this.category_name = initChannelData?.category_name ?? "";
        this.parent_id = initChannelData?.parent_id ?? "";
        this.clan = clan;
        this.messages = new CacheManager(async (message_id) => {
            // TODO: If the channel's message cache is empty,
            // and channel.messages.fetch(message_id) is called,
            // this function will be triggered to fetch the message detail from the API.
            throw Error(`Message ${message_id} not found on channel ${this.id}!`);
        }, 200);
        this.socketManager = socketManager;
        this.messageQueue = messageQueue;
    }
    async send(content) {
        return this.messageQueue.enqueue(async () => {
            const dataSend = {
                clan_id: this.clan.id,
                channel_id: this.id,
                mode: convertChanneltypeToChannelMode(this.channel_type),
                is_public: !this.is_private,
                content,
            };
            return await this.socketManager.writeChatMessage(dataSend);
        });
    }
    async sendDM(sendDmPayload) {
        return this.messageQueue.enqueue(async () => {
            const user = this.clan.users.get(sendDmPayload.user_id);
            if (!user)
                throw Error("user not found!");
            let dmChannelId = user?.dmChannelId;
            if (!user.dmChannelId) {
                console.log("--------------- call api createDMchannel");
                const dmChannel = await user._createDmChannel();
                user.dmChannelId = dmChannel?.channel_id ?? "";
            }
            if (!dmChannelId)
                throw Error(`Can not get dmChannelId for this user ${user.id}!`);
            const dataSendDm = {
                clan_id: "0",
                channel_id: dmChannelId,
                mode: ChannelStreamMode.STREAM_MODE_DM,
                is_public: false,
                content: sendDmPayload.content,
            };
            return await this.socketManager.writeChatMessage(dataSendDm);
        });
    }
}
//# sourceMappingURL=TextChannel.js.map