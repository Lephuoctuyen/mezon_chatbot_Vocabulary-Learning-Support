import { Session } from '../session';
export class SessionManager {
    apiClient;
    session;
    constructor(apiClient) {
        this.apiClient = apiClient;
    }
    async authenticate(apiKey) {
        return this.apiClient.mezonAuthenticate(apiKey, "", {
            account: {
                token: apiKey,
            }
        }).then(async (apiSession) => {
            this.session = new Session(apiSession);
            return this.session;
        });
    }
    async logout() {
        if (!this.session)
            return false;
        const request = {
            token: this.session.token,
            refresh_token: this.session.refresh_token
        };
        return this.apiClient.mezonAuthenticateLogout(this.session.token, request).then((response) => {
            return response !== undefined;
        });
    }
    getSession() {
        return this.session;
    }
}
//# sourceMappingURL=session_manager.js.map