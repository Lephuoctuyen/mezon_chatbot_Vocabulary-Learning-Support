import { encode, decode } from "js-base64";
export function buildFetchOptions(method, options, bodyJson) {
    const fetchOptions = { ...{ method: method }, ...options };
    fetchOptions.headers = { ...options.headers };
    if (!Object.keys(fetchOptions.headers).includes("Accept")) {
        fetchOptions.headers["Accept"] = "application/json";
    }
    if (!Object.keys(fetchOptions.headers).includes("Content-Type")) {
        fetchOptions.headers["Content-Type"] = "application/json";
    }
    Object.keys(fetchOptions.headers).forEach((key) => {
        if (!fetchOptions.headers[key]) {
            delete fetchOptions.headers[key];
        }
    });
    if (bodyJson) {
        fetchOptions.body = bodyJson;
    }
    return fetchOptions;
}
export function b64EncodeUnicode(str) {
    return encode(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(_match, p1) {
        return String.fromCharCode(Number('0x' + p1));
    }));
}
export function b64DecodeUnicode(str) {
    return decodeURIComponent(decode(str).split('').map(function (c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));
}
//# sourceMappingURL=utils.js.map